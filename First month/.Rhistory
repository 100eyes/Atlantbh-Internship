load("~/Documents/Praksa/business_dataframe.RData")
# Setting working directory
setwd("/home/besim/Documents/Atlantbh-Internship/First month")
library(readr)
yelp_business <- read_delim("yelp_business.csv",
"#", escape_double = FALSE, trim_ws = TRUE)
View(yelp_business)
hist(yelp_business$review_count, breaks = 1000, xlim = 1000, xlab = "Review count", main = "Review count frequency")
# Data frequency
hist(yelp_business$stars, xlab = "Stars", main = "Stars frequency")
hist(yelp_business$review_count, breaks = 1000, xlim = 1000, xlab = "Review count", main = "Review count frequency")
which.max(yelp_business$longitude)
yelp_business$longitude[which.max(yelp_business$longitude)]
yelp_business$longitude[which.min(yelp_business$longitude)]
yelp_business$latitude[which.max(yelp_business$latitude)]
yelp_business$latitude[which.min(yelp_business$latitude)]
hist(yelp_business$review_count, breaks = 1000, xlim = c(0, 100), ylim = c(0, 10), xlab = "Review count", main = "Review count frequency")
hist(yelp_business$review_count, breaks = 1000, xlim = c(0, 100), ylim = c(0, 100), xlab = "Review count", main = "Review count frequency")
hist(yelp_business$review_count, breaks = 1000, xlim = c(0, 100), ylim = c(0, 1000), xlab = "Review count", main = "Review count frequency")
hist(yelp_business$review_count, breaks = 1000, xlim = c(0, 100), ylim = c(0, 10000), xlab = "Review count", main = "Review count frequency")
hist(yelp_business$review_count, breaks = 1000, xlim = c(0, 150), ylim = c(0, 20000), xlab = "Review count", main = "Review count frequency")
yelp_business$review_count[which.max(yelp_business$review_count)]
which.max(yelp_business$review_count)
yelp_business[which.max(yelp_business$review_count), ]
temp <- yelp_business[which.max(yelp_business$review_count), ]
View(temp)
hist(yelp_business$review_count, breaks = 1000, xlim = c(0, 150), ylim = c(0, 30000), xlab = "Review count", main = "Review count frequency")
hist(yelp_business$review_count, breaks = 1000, xlim = c(0, 150), ylim = c(0, 40000), xlab = "Review count", main = "Review count frequency")
hist(yelp_business$review_count, breaks = 1000, xlim = c(0, 150), ylim = c(0, 50000), xlab = "Review count", main = "Review count frequency")
hist(yelp_business$review_count, breaks = 1000, xlim = c(0, 150), ylim = c(0, 100000), xlab = "Review count", main = "Review count frequency")
hist(yelp_business$review_count, breaks = 1000, xlim = c(0, 150), ylim = c(0, 200000), xlab = "Review count", main = "Review count frequency")
hist(yelp_business$review_count, breaks = 1000, xlim = c(0, 150), ylim = c(0, 100500), xlab = "Review count", main = "Review count frequency")
hist(yelp_business$review_count, breaks = 1000, xlim = c(0, 150), ylim = c(0, 105000), xlab = "Review count", main = "Review count frequency")
summary(yelp_business$review_count)
boxplot(yelp_business$review_count)
boxplot(yelp_business$review_count ~ yelp_business$stars)
plot(yelp_business$stars, yelp_business$review_count)
hist(yelp_business$review_count, freq = FALSE, breaks = 1000, xlim = c(0, 150), ylim = c(0, 105000), xlab = "Review count", main = "Review count frequency")
hist(yelp_business$review_count, freq = FALSE, xlim = c(0, 150), ylim = c(0, 105000), xlab = "Review count", main = "Review count frequency")
hist(yelp_business$review_count, freq = FALSE, xlab = "Review count", main = "Review count frequency")
hist(yelp_business$review_count, breaks = 1000, xlim = c(0, 150), ylim = c(0, 105000), xlab = "Review count", main = "Review count frequency")
table(yelp_business$review_count)
table(yelp_business$review_count, yelp_business$stars)
review_vs_stars <- table(yelp_business$review_count, yelp_business$stars)
View(review_vs_stars)
? count_if
# checking num of empty values
na_num = sapply(yelp_business, function(x) sum(is.na(x)))
total_nas = sum(na_num)
# Total completeness of database in percents
dummy_percent = total_nas/(nrow(yelp_business)*ncol(yelp_business))*100
dummy_percent
which.max(na_num)
which.min(na_num)
# Dummy values
states <- table(yelp_business$state)
sum(states[c("01", "10", "11", "4", "45", "6")])
View(states)
names_missing_geocode <- yelp_business$name[which(is.na(yelp_business$latitude) | (is.na(yelp_business$longitude)))]
address_missing_geocode <- yelp_business$address[which(is.na(yelp_business$latitude) | (is.na(yelp_business$longitude)))]
missing_geocode <- rbind(names_missing_geocode, address_missing_geocode)
rm(names_missing_geocode, address_missing_geocode)
places_missing_address <- yelp_business$name[which(is.na(yelp_business$address))]
View(missing_geocode)
yelp_business$longitude[which.max(yelp_business$longitude)]
yelp_business$longitude[which.min(yelp_business$longitude)]
yelp_business$latitude[which.max(yelp_business$latitude)]
yelp_business$latitude[which.min(yelp_business$latitude)]
# Data frequency
hist(yelp_business$stars, xlab = "Stars", main = "Stars frequency")
hist(yelp_business$review_count, breaks = 1000, xlim = c(0, 150), ylim = c(0, 105000), xlab = "Review count", main = "Review count frequency")
summary(yelp_business$review_count)
View(na_num)
length(which(is.na(yelp_business$address)))
is.numeric("fdgfdfgdf")
is.numeric("fdgfdfgdf1")
is.numeric("432432")
is.numeric(as.numeric("oldkmvoa"))
table(yelp_business$state)
table(yelp_business$city)
View(yelp_business)
tail(sort(table(yelp_business$name)))
tail(sort(table(yelp_business$name)), n=10)
plot(yelp_business$longitude, yelp_business$latitude)
plot(yelp_business$latitude, yelp_business$longitude)
